version: v1.0
name: Build
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: "Build"
    task:
      env_vars:
        - name: APP_ENV
          value: prod
        - name: IMAGE_NAME
          value: manage-courses-backend
      secrets:
      - name: docker-hub
      jobs:
      - name: Docker build
        commands:
          - checkout
          - echo APP_ENV=$APP_ENV
          - GIT_SHORT_SHA=$(echo $SEMAPHORE_GIT_SHA | cut -c 1-7)
          - echo "Docker build $GIT_SHORT_SHA"
          - docker build -t $IMAGE_NAME:$GIT_SHORT_SHA .
          - docker tag $IMAGE_NAME:$GIT_SHORT_SHA $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHORT_SHA
          - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
          - docker push $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHORT_SHA
          - echo "done"

  - name: Run Tests
    task:
      env_vars:
        - name: APP_ENV
          value: prod
        - name: IMAGE_NAME
          value: manage-courses-backend
      secrets:
      - name: docker-hub
      prologue:
        commands:
        - checkout
        - export GIT_SHORT_SHA=$(echo $SEMAPHORE_GIT_SHA | cut -c 1-7)
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker pull $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHORT_SHA
        - docker-compose -f docker-compose-ci.yml up -d
        - docker-compose -f docker-compose-ci.yml run web rails db:setup
      jobs:
      - name: RSpec
        commands:
        - docker-compose -f docker-compose-ci.yml run web rails spec

      - name: Ruby Lint
        commands:
        - docker-compose -f docker-compose-ci.yml run web bundle exec govuk-lint-ruby app config db lib spec

  - name: Push Image
    task:
      env_vars:
      - name: IMAGE_NAME
        value: manage-courses-backend
      secrets:
      - name: docker-hub
      jobs:
      - name: Push
        commands:
        - export GIT_SHORT_SHA=$(echo $SEMAPHORE_GIT_SHA | cut -c 1-7)
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker pull $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHORT_SHA
        - docker tag $DOCKER_USERNAME/$IMAGE_NAME:$GIT_SHORT_SHA $DOCKER_USERNAME/$IMAGE_NAME:$SEMAPHORE_GIT_BRANCH
        - docker push $DOCKER_USERNAME/$IMAGE_NAME:$SEMAPHORE_GIT_BRANCH

